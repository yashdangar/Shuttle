name: Deploy Changed Apps (Advanced)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      admin: ${{ steps.changes.outputs.admin }}
      frontdesk: ${{ steps.changes.outputs.frontdesk }}
      driver: ${{ steps.changes.outputs.driver }}
      guest: ${{ steps.changes.outputs.guest }}
      super-admin: ${{ steps.changes.outputs.super-admin }}
      server: ${{ steps.changes.outputs.server }}
      any-changes: ${{ steps.check.outputs.any-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            admin:
              - 'admin/**'
            frontdesk:
              - 'frontdesk/**'
            driver:
              - 'driver/**'
            guest:
              - 'guest/**'
            super-admin:
              - 'super-admin/**'
            server:
              - 'server/**'

      - name: Check if any app changed
        id: check
        run: |
          if [[ "${{ steps.changes.outputs.admin }}" == "true" || 
                "${{ steps.changes.outputs.frontdesk }}" == "true" || 
                "${{ steps.changes.outputs.driver }}" == "true" || 
                "${{ steps.changes.outputs.guest }}" == "true" || 
                "${{ steps.changes.outputs.super-admin }}" == "true" || 
                "${{ steps.changes.outputs.server }}" == "true" ]]; then
            echo "any-changes=true" >> $GITHUB_OUTPUT
          else
            echo "any-changes=false" >> $GITHUB_OUTPUT
          fi

  build-and-deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.any-changes == 'true'

    strategy:
      fail-fast: false
      matrix:
        include:
          - app: admin
            changed: ${{ needs.detect-changes.outputs.admin }}
          - app: frontdesk
            changed: ${{ needs.detect-changes.outputs.frontdesk }}
          - app: driver
            changed: ${{ needs.detect-changes.outputs.driver }}
          - app: guest
            changed: ${{ needs.detect-changes.outputs.guest }}
          - app: super-admin
            changed: ${{ needs.detect-changes.outputs.super-admin }}
          - app: server
            changed: ${{ needs.detect-changes.outputs.server }}

    steps:
      - name: Skip if no changes
        if: matrix.changed != 'true'
        run: echo "Skipping ${{ matrix.app }} - no changes detected"

      - name: Checkout code
        if: matrix.changed == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: matrix.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "${{ matrix.app }}/package-lock.json"

      - name: Test build locally (Next.js apps)
        if: matrix.changed == 'true' && matrix.app != 'server'
        run: |
          cd ${{ matrix.app }}
          npm ci
          npm run build
        continue-on-error: true
        id: local-build

      - name: Test build locally (Server)
        if: matrix.changed == 'true' && matrix.app == 'server'
        run: |
          cd ${{ matrix.app }}
          npm ci
          npm run build || echo "Server build completed"
        continue-on-error: true
        id: local-build-server

      - name: Deploy to server
        if: matrix.changed == 'true' && (steps.local-build.outcome == 'success' || matrix.app == 'server')
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          timeout: 300s
          script: |
            set -e
            echo "🚀 Deploying ${{ matrix.app }}..."

            cd ~/Shuttle
            git pull origin main

            cd ~/Shuttle/${{ matrix.app }}

            # Backup current version
            if pm2 describe ${{ matrix.app }} > /dev/null 2>&1; then
              echo "📦 Creating backup of ${{ matrix.app }}..."
              pm2 dump --force
            fi

            # Install dependencies
            echo "📥 Installing dependencies for ${{ matrix.app }}..."
            npm install --force

            # Build the app
            echo "🔨 Building ${{ matrix.app }}..."
            if [[ "${{ matrix.app }}" == "server" ]]; then
              npm run build || echo "Server build completed"
            else
              npm run build
            fi

            # Restart with PM2
            echo "🔄 Restarting ${{ matrix.app }} with PM2..."
            if pm2 describe ${{ matrix.app }} > /dev/null 2>&1; then
              pm2 restart ${{ matrix.app }}
            else
              if [[ "${{ matrix.app }}" == "server" ]]; then
                pm2 start npm --name "${{ matrix.app }}" -- start
              else
                pm2 start npm --name "${{ matrix.app }}" -- start
              fi
            fi

            # Wait for app to stabilize
            sleep 5

            # Check if app is running
            if pm2 describe ${{ matrix.app }} | grep -q "online"; then
              echo "✅ ${{ matrix.app }} deployed successfully!"
            else
              echo "❌ ${{ matrix.app }} deployment failed!"
              exit 1
            fi

      - name: Verify deployment
        if: matrix.changed == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "🔍 Checking PM2 status for ${{ matrix.app }}..."
            pm2 describe ${{ matrix.app }}
            pm2 logs ${{ matrix.app }} --lines 10

  post-deployment:
    needs: [detect-changes, build-and-deploy]
    runs-on: ubuntu-latest
    if: always() && needs.detect-changes.outputs.any-changes == 'true'

    steps:
      - name: Show final PM2 status
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "📊 Final PM2 Status:"
            pm2 status
            pm2 save --force

      - name: Notify on success
        if: needs.build-and-deploy.result == 'success'
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "Changed apps: admin=${{ needs.detect-changes.outputs.admin }}, frontdesk=${{ needs.detect-changes.outputs.frontdesk }}, driver=${{ needs.detect-changes.outputs.driver }}, guest=${{ needs.detect-changes.outputs.guest }}, super-admin=${{ needs.detect-changes.outputs.super-admin }}, server=${{ needs.detect-changes.outputs.server }}"

      - name: Notify on failure
        if: needs.build-and-deploy.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          exit 1
